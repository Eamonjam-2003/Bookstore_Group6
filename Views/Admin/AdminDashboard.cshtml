@model Tuple<List<Bookstore_Group6.Models.BuyerBorrower>, List<Bookstore_Group6.Models.Clients>, List<Bookstore_Group6.Models.Books>, List<Bookstore_Group6.Models.Transactions>>

@{
    ViewBag.Title = "Admin Dashboard";
}

<h2 class="mt-4 mb-3">Admin Dashboard</h2>

<!-- USERS SECTION -->
<h3 class="mt-4">Users (Buyers, Borrowers, Sellers)</h3>
<input type="text" id="userSearch" placeholder="Search Users..." class="form-control mb-2" />
<table class="table table-striped table-bordered" id="usersTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Address</th>
            <th>Client Type</th>
            <th>Role</th>
            <th>Change Role</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody id="usersBody">
        @foreach (var user in Model.Item1)
        {
            <tr>
                <td>@user.Name</td>
                <td>@user.Email</td>
                <td>@user.PhoneNumber</td>
                <td>@user.Address</td>
                <td>@user.ClientType</td>
                <td>@user.Role</td>
                <td>
                    <select class="form-control role-dropdown" data-user-id="@user.Id">
                        <option value="User" @(user.Role == "User" ? "selected" : "")>User</option>
                        <option value="Admin" @(user.Role == "Admin" ? "selected" : "")>Admin</option>
                    </select>
                </td>
                <td>
                    @using (Html.BeginForm("DeleteBuyer", "Admin", FormMethod.Post))
                    {
                        @Html.Hidden("id", user.Id)
                        <button class="btn btn-sm btn-danger">Delete</button>
                    }
                </td>
            </tr>
        }
        @foreach (var client in Model.Item2)
        {
            <tr>
                <td>@client.Name</td>
                <td>@client.Email</td>
                <td>@client.PhoneNumber</td>
                <td>@client.Address</td>
                <td>Seller</td>
                <td>Seller</td>
                <td>N/A</td>
                <td>
                    @using (Html.BeginForm("DeleteClient", "Admin", FormMethod.Post))
                    {
                        @Html.Hidden("id", client.Id)
                        <button class="btn btn-sm btn-danger">Delete</button>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div id="usersPagination" class="pagination mb-4"></div>

<!-- BOOKS SECTION -->
<h3 class="mt-5">Books</h3>
<input type="text" id="bookSearch" placeholder="Search Books..." class="form-control mb-2" />
<table class="table table-striped table-bordered" id="booksTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Author</th>
            <th>ISBN</th>
            <th>Price</th>
            <th>Borrowed?</th>
            <th>Bought?</th>
        </tr>
    </thead>
    <tbody id="booksBody">
        @foreach (var book in Model.Item3)
        {
            <tr>
                <td>@book.Name</td>
                <td>@book.Author</td>
                <td>@book.ISBN</td>
                <td>$@book.Price</td>
                <td>@(book.IsBorrowed ? "Yes" : "No")</td>
                <td>@(book.IsBought ? "Yes" : "No")</td>
            </tr>
        }
    </tbody>
</table>
<div id="booksPagination" class="pagination mb-4"></div>

<!-- TRANSACTIONS SECTION -->
<h3 class="mt-5">Transactions</h3>
<input type="text" id="transactionSearch" placeholder="Search Transactions..." class="form-control mb-2" />
<table class="table table-striped table-bordered" id="transactionsTable">
    <thead>
        <tr>
            <th>ID</th>
            <th>Client ID</th>
            <th>Book ID</th>
            <th>Date</th>
        </tr>
    </thead>
    <tbody id="transactionsBody">
        @foreach (var tx in Model.Item4)
        {
            <tr>
                <td>@tx.Id</td>
                <td>@tx.ClientId</td>
                <td>@tx.BookId</td>
                <td>@tx.Date.ToShortDateString()</td>
            </tr>
        }
    </tbody>
</table>
<div id="transactionsPagination" class="pagination mb-4"></div>

@section Scripts {
    <script>
        function setupPagination(tableId, paginationId, rowsPerPage) {
            const table = document.getElementById(tableId);
            const rows = table.querySelectorAll("tbody tr");
            const pagination = document.getElementById(paginationId);
            const totalPages = Math.ceil(rows.length / rowsPerPage);

            pagination.innerHTML = "";

            for (let i = 0; i < totalPages; i++) {
                const btn = document.createElement("button");
                btn.innerText = i + 1;
                btn.className = "btn btn-sm btn-outline-primary mx-1";
                btn.onclick = () => {
                    rows.forEach((row, index) => {
                        row.style.display = (index >= i * rowsPerPage && index < (i + 1) * rowsPerPage) ? "" : "none";
                    });
                };
                pagination.appendChild(btn);
            }

            if (pagination.children.length > 0) pagination.children[0].click();
        }

        function setupSearch(inputId, tableId) {
            document.getElementById(inputId).addEventListener("input", function () {
                const filter = this.value.toLowerCase();
                const rows = document.getElementById(tableId).querySelectorAll("tbody tr");
                rows.forEach(row => {
                    const match = row.textContent.toLowerCase().includes(filter);
                    row.style.display = match ? "" : "none";
                });
            });
        }

        setupPagination("usersTable", "usersPagination", 10);
        setupPagination("booksTable", "booksPagination", 10);
        setupPagination("transactionsTable", "transactionsPagination", 10);

        setupSearch("userSearch", "usersTable");
        setupSearch("bookSearch", "booksTable");
        setupSearch("transactionSearch", "transactionsTable");

        $(".role-dropdown").change(function () {
            const userId = $(this).data("user-id");
            const newRole = $(this).val();
            $.ajax({
                url: '@Url.Action("UpdateRole", "BuyerBorrower")',
                type: 'POST',
                data: { id: userId, role: newRole },
                success: function (response) {
                    alert(response.message);
                },
                error: function () {
                    alert("Failed to update role.");
                }
            });
        });
    </script>
}
